package net.mandomc.mandomcremade.listeners;

import net.mandomc.mandomcremade.MandoMCRemade;
import net.mandomc.mandomcremade.utility.Messages;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.entity.*;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.entity.CreatureSpawnEvent;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.inventory.BrewEvent;
import org.bukkit.event.player.PlayerInteractEntityEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerTeleportEvent;

public class ExploitListener implements Listener {

    MandoMCRemade plugin;

    public ExploitListener(MandoMCRemade plugin){
        this.plugin = plugin;
    }

    @EventHandler
    public void onPlace(BlockPlaceEvent event){
        Player player = event.getPlayer();
        Block block = event.getBlockPlaced();
        Material type = block.getType();
        switch(type){
            case END_CRYSTAL:
                if(!player.hasPermission("mmc.blacklist.endcrystal")){
                    event.setCancelled(true);
                    Messages.msg(player, "&cThis block is banned from being used!");
                }
                break;
            case END_PORTAL_FRAME:
                if(!player.hasPermission("mmc.blacklist.endportalframe")){
                    event.setCancelled(true);
                    Messages.msg(player, "&cThis block is banned from being used!");
                }
                break;
            case BEDROCK:
                if(!player.hasPermission("mmc.blacklist.bedrock")){
                    event.setCancelled(true);
                    Messages.msg(player, "&cThis block is banned from being used!");
                }
                break;
        }
    }

    @EventHandler
    public void onClick(PlayerInteractEvent event){
        Player player = event.getPlayer();

        if(event.getAction() == Action.RIGHT_CLICK_BLOCK){
            if(player.getItemInUse() != null){
                if(!player.hasPermission("mmc.blacklist.musicdiscs") && (player.getItemInUse().getType().name().contains("MUSIC_DISC"))){
                    event.setCancelled(true);
                    Messages.msg(player, "&cThis feature is temporarily disabled!");
                }
            }
        }
    }

    @EventHandler
    public void onEntityClick(PlayerInteractEntityEvent event){

        Player player = event.getPlayer();

        if(!player.hasPermission("mmc.blacklist.endcrystal") && event.getRightClicked().getType() == EntityType.END_CRYSTAL){
            event.setCancelled(true);
        }
    }

    @EventHandler
    public void brew(BrewEvent event){
        event.setCancelled(true);
    }

    @EventHandler
    public void onSpawn(CreatureSpawnEvent event){
        if(event.getEntity() instanceof Phantom){
            if(event.getSpawnReason().equals(CreatureSpawnEvent.SpawnReason.NATURAL)){
                event.setCancelled(true);
            }
        }
    }

    @EventHandler
    public void onTeleport(PlayerTeleportEvent event){
        if (event.getCause() == PlayerTeleportEvent.TeleportCause.ENDER_PEARL){
            Player player = event.getPlayer();
            if(!player.hasPermission("mmc.blacklist.enderpearls")){
                event.setCancelled(true);
                Messages.msg(player, "&cEnderpearls are disabled!");
            }
        }
    }

    @EventHandler
    public void villagerInteract(PlayerInteractEntityEvent event) {
        Entity entity = event.getRightClicked();
        Player player = event.getPlayer();
        if (plugin.getConfig().getBoolean("Villagers") && entity instanceof Villager) {
            event.setCancelled(true);
            Messages.msg(player, "&cVillagers are disabled!");
        }
    }

    @EventHandler
    public void damage(EntityDamageEvent event){

        if(plugin.getConfig().getBoolean("EnderCrystal") && event.getEntity().getType() == EntityType.END_CRYSTAL){
            event.setCancelled(true);
        }
    }
}
